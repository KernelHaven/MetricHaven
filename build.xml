<?xml version="1.0" encoding="UTF-8"?>


<project name="MetricHaven" default="jenkins" basedir="." xmlns:jacoco="antlib:org.jacoco.ant" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle.ant">
	<description>Detects presence condtions and feature effects.</description>

	<property name="lib.dir" value="${basedir}/lib" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="jar.dir" value="${build.dir}/jar" />
  <property name="dependencies.dir" value="${build.dir}/builddependencies" />
  <property name="jar.filename" value="${ant.project.name}.jar" />
  <property name="jar.filename.withsource" value="${ant.project.name}_withsource.jar" />
  <property name="test.classes.dir" value="${build.dir}/classes-tests" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="reports.dir" value="${build.dir}/reports" />
  <property name="reports.xml.dir" value="${reports.dir}/xml" />
  <property name="reports.html.dir" value="${reports.dir}/html" />
  <property name="workspace.snapshot.dir" value="${build.dir}/workspacesnapshot/" />
  <property name="jenkins.location" value="http://jenkins.sse.uni-hildesheim.de/job" />
  <property name="infrastructure.location" value="${jenkins.location}/KernelHaven_Infrastructure/lastSuccessfulBuild/artifact/build/jar/kernelhavenfortesting.jar" />
  <property name="TypeChef.location" value="${jenkins.location}/KernelHaven_TypeChefExtractor/lastSuccessfulBuild/artifact/build/jar/TypeChefExtractor.jar" />
  <property name="Undertaker.location" value="${jenkins.location}/KernelHaven_UndertakerExtractor/lastSuccessfulBuild/artifact/build/jar/undertakerextractor.jar" />
  
  <!-- Modules that build -->
  <property name="src.dir" value="${basedir}/src" />
  <property name="test.dir" value="${basedir}/test" />

	
	<path id="classpath.project">
    <fileset dir="${lib.dir}" />
    <fileset dir="${dependencies.dir}" />
    <pathelement location="${classes.dir}" />
  </path>
  
  <path id="classpath.testing">
    <fileset dir="${lib.dir}" />
    <!-- Loads Junit from ANT installation folder -->
    <fileset dir="${user.home}/.ant/lib">
      <include name="junit*.jar"/>
      <include name="hamcrest*.jar"/>
    </fileset>
    <fileset dir="${dependencies.dir}" />
    <pathelement location="${test.classes.dir}" />
  </path>

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml"/>

  <target name="jenkins" depends="compile">
    <!--antcall target="test" /-->
    <antcall target="jar" />
    <antcall target="jarwithsources" />
    <antcall target="check" />
    <!--antcall target="jacoco_report" /-->
    <antcall target="zip_workspace" />
  </target>


  <target name="jar">
    <jar destfile="${jar.dir}/${jar.filename}" basedir="${classes.dir}" excludes="**/*Test.class, **/*Tests.class, **/package-info.class" />
  </target>

  <target name="jarwithsources">
    <jar destfile="${jar.dir}/${jar.filename.withsource}">
      <fileset dir="${classes.dir}" excludes="**/*Test.class, **/*Tests.class, **/package-info.class" />
      <fileset dir="${src.dir}" excludes="**/*Test.java, **/*Tests.java, **/package-info.java" />
    </jar>
  </target>


  <target name="init">
    <delete dir="${build.dir}" />
    
    <mkdir dir="${lib.dir}" />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${dependencies.dir}" />
    <mkdir dir="${reports.xml.dir}" />
    <mkdir dir="${reports.html.dir}" />
    <get src="${infrastructure.location}" dest="${dependencies.dir}/kernelhaven.jar" />
    <get src="${TypeChef.location}" dest="${dependencies.dir}/TypeChef.jar" />
    <get src="${Undertaker.location}" dest="${dependencies.dir}/Undertaker.jar" />
  </target>

  <target name="compile" depends="init">
    <!-- compile java-classes -->
    <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes" includeantruntime="false">
      <classpath refid="classpath.project" />
    </javac>

    <!-- copy resources for java-classes -->
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="test">
    <mkdir dir="${test.classes.dir}" />
    <javac destdir="${test.classes.dir}" debug="yes" includeantruntime="false">
      <src path="${src.dir}"/>
      <src path="${test.dir}"/>
      <classpath refid="classpath.testing" />
    </javac>
    
    <copy todir="${test.classes.dir}/testdata">
      <fileset dir="testdata"/>
    </copy>
    
    <jacoco:coverage destfile="${reports.dir}/jacoco.exec">
      <junit fork="yes" dir="${test.classes.dir}" failureProperty="test.failed">
        <!-- Note the classpath order: instrumented classes are before the original 
                  (uninstrumented) classes. This is important. -->
        <classpath refid="classpath.testing" />

        <formatter type="xml" />
        <test name="${testcase}" todir="${reports.xml.dir}" if="testcase" />
        <batchtest todir="${reports.xml.dir}" unless="testcase">
          <!-- include all Tests -->
          <fileset dir="${test.dir}">
            <include name="**/AllTests.java" />
          </fileset>
          
          <!-- include all resources from the src-package-folders -->
          <fileset dir="${src.dir}">
            <exclude name="**/*.java" />
          </fileset>
        </batchtest>
      </junit>
    </jacoco:coverage>
    <!-- JUnit Report in HTML -->
    <junitreport todir="${reports.xml.dir}">
      <fileset dir="${reports.xml.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${reports.html.dir}" />
    </junitreport>

  </target>

  <target name="check">

    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"/>

    <checkstyle config="${basedir}/checkstyle.xml" failOnViolation="false">
      <fileset dir="${src.dir}" includes="**/*.java" />
      <formatter type="plain" />
      <formatter type="xml" toFile="build/reports/xml/checkstyle_errors.xml" />
    </checkstyle>
  </target>

  <target name="jacoco_report">
    <jacoco:report>
      <executiondata>
        <file file="${reports.dir}/jacoco.exec" />
      </executiondata>

      <structure name="${ant.project.name}">
        <classfiles>
          <fileset dir="${build.dir}/classes" />
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="${src.dir}" />
        </sourcefiles>
      </structure>

      <html destdir="${reports.dir}/html" />
    </jacoco:report>
  </target>

  <target name="zip_workspace">
    <zip destfile="${workspace.snapshot.dir}/${ant.project.name}.zip" basedir="${basedir}" excludes="jacoco.exec, build/**" />
  </target>

	</project>